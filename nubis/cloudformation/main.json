{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Create a CEPH Cluster",
  "Parameters": {
    "ServiceName": {
      "Description": "The name of the service this belongs to",
      "Type": "String"
    },
    "TechnicalOwner": {
      "Description": "A valid LDAP email",
      "Type": "String"
    },
    "Environment": {
      "Description": "Environment we are deploying into",
      "Default": "sandbox",
      "Type": "String",
      "AllowedValues": [
        "prod",
        "dev",
        "sandbox"
      ],
      "ConstraintDescription": "Must specify prod, dev, or sandbox."
    },
    "VpcId": {
      "Description": "Id of the VPC",
      "Type": "String"
    },
    "Subnets": {
      "Description": "Coma, seperated, list, of, subnets",
      "Type": "CommaDelimitedList"
    },
    "KeyName": {
      "Description": "Name of and existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "String"
    },
    "AMI": {
      "Description": "AMI Id",
      "Type": "String"     
    },
    "InstanceType": {
      "Description": "Softnas HVM EC2 instance type",
      "Type": "String",
      "Default": "m3.medium",
      "AllowedValues": [
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "cr1.8xlarge",
        "hi1.4xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "g2.2xlarge",
        "hs1.8xlarge",
        "c3.large",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge"
      ],
      "ConstraintDescription": "must be a valid HVM EC2 instance type."
    },
    "VolumeSize": {
      "Description": "Size in GB of the volume",
      "Type": "String",
      "Default": "50"
    },
    "ClusterSize": {
      "Description": "Members of the cluster, keep an odd number",
      "Type": "String",
      "Default": "1"
    },
    "InternetAccessSecurityGroup": {
      "Description": "Internet Access Security Group ID",
      "Type": "String"
    },
    "SSSG": {
      "Description": "SSSG Security Group ID",
      "Type": "String"
    }
  },
  "Resources": {
    "CephSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Inter-Server communication",
        "VpcId": {
          "Ref": "VpcId"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "65535"
          }
        ]
      }
    },
    "CephSecurityGroupIngress": {
      "Type" : "AWS::EC2::SecurityGroupIngress",
      "Properties" : {
             "GroupId" : { "Ref" : "CephSecurityGroup" },
             "IpProtocol" : "tcp",
             "ToPort" : "65535",
             "FromPort" : "0",
             "SourceSecurityGroupId" : { "Ref" : "CephSecurityGroup" }
         },
         "DependsOn" : "CephSecurityGroup"
    },
    "LaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": { "Ref": "AMI" },
        "SecurityGroups": [
          {
            "Ref": "CephSecurityGroup"
          },
	  {
	    "Ref": "SSSG"
	  },
	  {
	    "Ref": "InternetAccessSecurityGroup"
	  }
        ],
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
	"BlockDeviceMappings" : [ {
            "DeviceName" : "/dev/sdk",
            "Ebs" : {"VolumeSize" :  { "Ref": "VolumeSize" } }
         }],
        "UserData": { "Fn::Base64": { "Fn::Join": [ "", [
	   "NUBIS_DOMAIN=nubis.allizom.org\n",
	   "NUBIS_ENVIRONMENT=", { "Ref": "Environment" } ,"\n",
	   "NUBIS_PROJECT=", { "Ref": "ServiceName" } ,"\n"
	]]}}
      }
    },
    "AutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": {
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": "true"
        },
        "AutoScalingRollingUpdate": {
          "MinInstancesInService": "1",
          "MaxBatchSize": "1",
          "WaitOnResourceSignals": "false",
          "PauseTime": "PT1M"
        }
      },
      "Properties": {
        "AvailabilityZones": { "Fn::GetAZs": "" },
        "VPCZoneIdentifier": { "Ref": "Subnets" },
	"Cooldown": 30,
        "LaunchConfigurationName": {
          "Ref": "LaunchConfig"
        },
        "MinSize": { "Ref": "ClusterSize" },
        "DesiredCapacity": { "Ref": "ClusterSize" },
        "MaxSize": { "Ref": "ClusterSize" },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "", [ "Nubis Storage Node (", { "Ref": "ServiceName" }, ")" ]]  },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Purpose",
            "Value": "Storage Server",
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Backups",
            "Value": "Nightly",
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Shutdown",
            "Value": "Never",
            "PropagateAtLaunch": "true"
          }
        ]
      }
    }
  },
  "Outputs": {}
}
