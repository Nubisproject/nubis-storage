{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Create a Softnas Instance with NFS enabled",
  "Parameters": {
    "ServiceName": {
      "Description": "The name of the service this belongs to",
      "Type": "String"
    },
    "TechnicalOwner": {
      "Description": "A valid LDAP email",
      "Type": "String"
    },
    "Environment": {
      "Description": "Environment we are deploying into",
      "Default": "sandbox",
      "Type": "String",
      "AllowedValues": [
        "prod",
        "dev",
        "sandbox"
      ],
      "ConstraintDescription": "Must specify prod, dev, or sandbox."
    },
    "VpcId": {
      "Description": "Id of the VPC",
      "Type": "String"
    },
    "Subnets": {
      "Description": "Coma, seperated, list, of, subnets",
      "Type": "CommaDelimitedList"
    },
    "KeyName": {
      "Description": "Name of and existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "String"
    },
    "InstanceType": {
      "Description": "Softnas HVM EC2 instance type",
      "Type": "String",
      "Default": "m3.medium",
      "AllowedValues": [
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "cr1.8xlarge",
        "hi1.4xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "g2.2xlarge",
        "hs1.8xlarge",
        "c3.large",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge"
      ],
      "ConstraintDescription": "must be a valid HVM EC2 instance type."
    },
    "VolumeSize": {
      "Description": "Size in GB of the volume",
      "Type": "String",
      "Default": "50"
    }
  },
  "Mappings": {
    "RegionMap": {
      "us-west-2": {
        "AMI": "ami-951839a5"
      },
      "us-east-1": {
        "AMI": "ami-f2c2909a"
      }
    }
  },
  "Resources": {
    "MyEBS1": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "Size": {
          "Ref": "VolumeSize"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        }
      }
    },
    "MyEBS2": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "Size": {
          "Ref": "VolumeSize"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        }
      }
    },
    "SoftnasSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable SSH access via port 22",
        "VpcId": {
          "Ref": "VpcId"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "LaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "SecurityGroups": [
          {
            "Ref": "SoftnasSecurityGroup"
          }
        ],
        "InstanceType": {
          "Ref": "InstanceType"
        },
	"IamInstanceProfile" : "packer-PackerInstanceProfile-FZ44D2NHGOZI",
        "KeyName": {
          "Ref": "KeyName"
        },
        "UserData": { "Fn::Base64": { "Fn::Join": [ "", [
	   "#!/bin/bash -ex \n",
	   "echo 'XXX Starting' \n",
	   "INSID=`curl http://169.254.169.254/latest/meta-data/instance-id` \n",
	   "REGION=", { "Ref": "AWS::Region" }, " \n",
	   "/usr/bin/aws ec2 --region $REGION attach-volume --instance-id $INSID --device /dev/xvdj --volume-id ", { "Ref": "MyEBS1" }, "\n",
	   "/usr/bin/aws ec2 --region $REGION attach-volume --instance-id $INSID --device /dev/xvdk --volume-id ", { "Ref": "MyEBS2" }, "\n",
	   "/var/www/softnas/scripts/initproc.sh \n",
	   "service httpd start \n",
	   "wget http://www.softnas.com/docs/softnas/v2/api/softnas-cmd.zip \n",
	   "unzip softnas-cmd.zip \n",
	   "mv softnas-cmd /usr/local/bin/ \n",
	   "chmod 755 /usr/local/bin/softnas-cmd \n",
	   "/usr/local/bin/softnas-cmd login softnas $INSID --base_url https://localhost/softnas --pretty_print \n",
	   "/usr/local/bin/softnas-cmd createpool /dev/xvdj:/dev/xvdk storage 1 on -t \n",
	   "/usr/local/bin/softnas-cmd createvolume data storage filesystem thin exportNFS=on shareCIFS=off dedup=on enable_snapshot=on schedule_name=Default hourlysnaps=5 dailysnaps=10 weeklysnaps=0 -t \n"
	]]}}
      }
    },
    "AutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": {
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": "true"
        },
        "AutoScalingRollingUpdate": {
          "MinInstancesInService": "1",
          "MaxBatchSize": "1",
          "WaitOnResourceSignals": "false",
          "PauseTime": "PT1M"
        }
      },
      "Properties": {
        "AvailabilityZones": [{
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        }],
        "VPCZoneIdentifier": [
          {
            "Fn::Select": [
              "0",
              {
                "Ref": "Subnets"
              }
            ]
          }
        ],
        "LaunchConfigurationName": {
          "Ref": "LaunchConfig"
        },
        "MinSize": "1",
        "DesiredCapacity": "1",
        "MaxSize": "2",
        "Tags": [
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Purpose",
            "Value": "Storage Server",
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Backups",
            "Value": "Nightly",
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Shutdown",
            "Value": "Never",
            "PropagateAtLaunch": "true"
          }
        ]
      }
    }
  },
  "Outputs": {}
}
